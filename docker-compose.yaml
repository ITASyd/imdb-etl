version: '3.8'

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.8.1
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__WEBSERVER__SECRET_KEY: ${SECRET_KEY}
  volumes:
    - ./dags:/opt/airflow/dags
    - ./connections.env:/opt/airflow/.env  # variabili custom eventuali
    - ./data:/opt/airflow/data
    - ./requirements.txt:/requirements.txt
  command: >
    bash -c "
      pip install -r /requirements.txt &&
      airflow webserver
    "
  depends_on:
    - postgres

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: -c "airflow db init && airflow users create --username syd-admin --password admin --firstname Diego --lastname Cinelli --role Admin --email cinellidiego@gmail.com"
    depends_on:
      - postgres

  airflow-webserver:
    <<: *airflow-common
    ports:
      - "8080:8080"
    command: webserver
    image: apache/airflow:2.8.1
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    image: apache/airflow:2.8.1
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data

volumes:
  postgres-db-volume:
